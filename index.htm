<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>JavaSnippets</title>
    <link rel="stylesheet" href="style/code.css" />
    <link rel="stylesheet" href="style/index.css" />
    <link rel="stylesheet" href="style/homeBlock.css" />
    <link rel="stylesheet" href="style/chapterBlock.css" />
</head>

<body>
    <div class="container">
        <div class="left-menu">
            <!-- Title bar -->
            <div class="toolbar">
                <div class="reddot"></div>
                <div class="yeldot"></div>
                <div class="gredot"></div>
                <p style="
              width: 50%;
              height: 15px;
              margin: auto;
              margin-top: 12px;
              margin-bottom: 12px;
              text-align: center;
              color: #000;
            ">
                    JSimple
                </p>
            </div>
            <div class="chapters">
                <h3>Capitolo 1 - Introduzione</h3>
                <a class="chapterSect" href="javascript:n1()">1.0.1 Come funziona Java</a>
                <br>
                <a class="chapterSect" href="javascript:n2()">1.0.2 le variabili</a>
                <br>
                <a class="chapterSect" href="javascript:n2()">1.0.2 gli operatori base</a>
            </div>
        </div>
        <div class="inner">
            <!-- Title bar -->
            <div class="bar">
                <button class="prev-command">
                    <div class="first"></div>
                    <div class="second"></div>
                </button>
                <button class="next-command">
                    <div class="first"></div>
                    <div class="second"></div>
                </button>
                <div class="titlecontainer">
                    <p>Java - reso più semplice</p>
                </div>
                <div class="hamburger-menu" id="hamburger">
                    <div class="line">
                        <div class="dot"></div>
                        <div class="line-inner"></div>
                    </div>
                    <div class="line">
                        <div class="dot"></div>
                        <div class="line-inner"></div>
                    </div>
                    <div class="line">
                        <div class="dot"></div>
                        <div class="line-inner"></div>
                    </div>
                </div>
            </div>
            <!-- actual container -->
            <div class="data-show">
                <!-- Here is the main code executed by JavaScript-->
                <div class="homePage">
                    <h2>Java - reso più semplice</h2>
                    <p class="desc">
                        Questo sito web è fatto apposta per rendere la programmazione,
                        specialmente di Java, più facile da capire, tutto è stato preso
                        dalla documentazione ufficiale di Java, iniziando da un semplice
                        programmino fino ad arrivare a vere e proprie applicazioni
                        professionali.
                    </p>
                    <h3>Come iniziare?</h3>
                    <p class="desc">
                        Premi il menù in alto a destra, scegli l'argomento e buono studio!
                    </p>
                    <p class="code" style="    width: 100%;
            text-align: center;
        ">
                        <span class="default">public class </span><span class="class-method">App{...}</span>
                    </p>
                    <p class="desc bottom">
                        Email sviluppatore:<br /><a
                            href="mailto:patric.personal99@gmail.com">patric.personal99@gmail.com</a><br />Contatto
                        telefonico:<br /><a href="tel:+393317704837">(+39) 331 770 4837</a><br />Diritti riservati.
                    </p>
                </div>
            </div>
        </div>
    </div>
    <script src="lib/jquery.js"></script>
    <script>
        function load(title, code, description) {
            mainDiv = $("<div>", { id: "mainDiv", class: "mainDiv" }).html(
                "Hello world"
            );
            $(".data-show").html("").append(mainDiv);
        }
        function moveBar() {
            $(".left-menu").toggleClass("active");
            if ($(".left-menu").hasClass("active")) {
                $(".left-menu").css("display", "none");
                $(".inner").css("width", "100%");
                $(".next-command, .prev-command, .titlecontainer").css(
                    "display",
                    "block"
                );
                $(".hamburger-menu").css("margin", "auto");
                $(".data-show").css("display", "block");
            } else {
                $(".left-menu").css("display", "block");
                $(".inner").css("width", "auto");
                $(".next-command, .prev-command, .titlecontainer").css(
                    "display",
                    "none"
                );
                $(".hamburger-menu").css("margin", "0");
                $(".data-show").css("display", "none");
            }
        }
        $("#hamburger").click(moveBar);
        function main() {
            moveBar();
        }
        main()
        function setHomePageCSS() { }
        function mkElem(t, n) {
            const r = $(`<${t}>`, {
                class: n,
            });
            return r;
        }
        function createElement(
            destination,
            title,
            description1,
            code,
            description2
        ) {
            const o = mkElem("div", "java-ex");
            const t = mkElem("h2", "title").text(title).appendTo(o);
            const d1 = mkElem("p", "desc").html(description1).appendTo(o);
            if (code !== null) {
                const c = mkElem("p", "code").html(code).appendTo(o);
            }
            const d2 = mkElem("p", "desc").html(description2).appendTo(o);
            $(destination).append(o);
            return o;
        }
        const code_template = `<span class="default">public class </span
><span class="class-method"
  >App{<br /><span class="default" style="margin-left: 4ch"
    >public static void</span
  >
  <span class="class-method"
    >main<span class="br1"
      >(<span class="class-method">String[]</span> args)</span
    ></span
  ><span class="br2">{<br /><span style="margin-left:8ch;">{codePiece}<span><br /></span><span style="margin-left:4ch" class="br2">}</span><br /><span class="class-method">}<span></span
>`
        function n1() {
            $(".data-show").html("");
            createElement(
                ".data-show",
                `Come funziona Java`,
                `Java è un linguaggio basato su oggetti, gli oggetti in Java sono strutturati come un albero, c'è il tronco, i rami e le foglie. In java il nostro tronco è la classe, denominata come <span class="code">"class"</span>, è il contenitore di tutte le istruzioni che andremo ad inserire, questo contenitore è composto da metodi, immaginiamo di fare un set di azioni e alla fine avere un risultato, un metodo è proprio questo, un set di istruzioni che poi alla fine può dare indietro una parola, un testo, un valore o anche nulla!`,
                code_template.replace("{codePiece}", "<span class='blank'>System.out.println</span><span class='br1'>(<span class='br2'>\"Hello World\"</span>)</span><span class='blank'>;</span>"),
                `Qui sopra un semplicissimo codice java, come si può notare <strong>la sintassi Java è molto semplice</strong>, Java teoricamente non ha neanche bisogno di andare a capo, perché <strong>per java andare a capo è il carattere ";"</strong> appunto possiamo vedere che dopo println abbiamo specificato un ";", quindi per la JVM il <strong>;</strong> segna fine istruzione.<br><br>guarda il colore della prima parentesi graffa, non è uguale all'ultima? questo perché <strong>la JVM mette in coorelazione le parentesi graffe, che ci servono da contenitore per le classi, metodi e molto altro</strong>, <strong>apri il tuo editor di testo preferito (consiglio <a href="https://code.visualstudio.com">VSCode di Microsoft</a>), copia e incolla questo codice e prova ad eseguirlo</strong>, che risultato da? Se hai eseguito tutto correttamente la JVM avrà eseguito il <strong>comando println</strong> della <strong>classe System.out</strong>, che è il metodo generale per dare un <strong>output in Java</strong> (ci sono altri metodi ovviamente per farlo), c'è anche <strong>System.in</strong> che è per l'input e <strong>System.err</strong> per gli errori, <strong>la classe System è presente nella JVM in java.lang</strong>, un "<strong>pacchetto</strong>" utilizzato da Java in <strong>maniera interna</strong>, e viene invocato automaticamente.<br><br><br><br>`
            );
            moveBar();
        }
        function n2() {
            $(".data-show").html("");
            createElement(
                ".data-show",
                `Come funziona Java`,
                `Java è un linguaggio basato su oggetti, gli oggetti in Java sono strutturati come un albero, c'è il tronco, i rami e le foglie. In java il nostro tronco è la classe, denominata come <span class="code">"class"</span>, è il contenitore di tutte le istruzioni che andremo ad inserire, questo contenitore è composto da metodi, immaginiamo di fare un set di azioni e alla fine avere un risultato, un metodo è proprio questo, un set di istruzioni che poi alla fine può dare indietro una parola, un testo, un valore o anche nulla!`,
                code_template.replace("{codePiece}", "<span class='blank'>System.out.println</span><span class='br1'>(<span class='br2'>\"Hello World\"</span>)</span><span class='blank'>;</span>"),
                `Qui sopra un semplicissimo codice java, come si può notare <strong>la sintassi Java è molto semplice</strong>, Java teoricamente non ha neanche bisogno di andare a capo, perché <strong>per java andare a capo è il carattere ";"</strong> appunto possiamo vedere che dopo println abbiamo specificato un ";", quindi per la JVM il <strong>;</strong> segna fine istruzione.<br><br>guarda il colore della prima parentesi graffa, non è uguale all'ultima? questo perché <strong>la JVM mette in coorelazione le parentesi graffe, che ci servono da contenitore per le classi, metodi e molto altro</strong>, <strong>apri il tuo editor di testo preferito (consiglio <a href="https://code.visualstudio.com">VSCode di Microsoft</a>), copia e incolla questo codice e prova ad eseguirlo</strong>, che risultato da? Se hai eseguito tutto correttamente la JVM avrà eseguito il <strong>comando println</strong> della <strong>classe System.out</strong>, che è il metodo generale per dare un <strong>output in Java</strong> (ci sono altri metodi ovviamente per farlo), c'è anche <strong>System.in</strong> che è per l'input e <strong>System.err</strong> per gli errori, <strong>la classe System è presente nella JVM in java.lang</strong>, un "<strong>pacchetto</strong>" utilizzato da Java in <strong>maniera interna</strong>, e viene invocato automaticamente.<br><br><br><br>`
            );
            moveBar();
        }
        
    </script>
</body>

</html>